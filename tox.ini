[tox]
minversion = 2.3.2
envlist = py35,py27,pep8
skipsdist = True

[testenv]
usedevelop = True
passenv = TRACE_FAILONLY
install_command =  pip install {opts} {packages}
setenv =
  PYTHONWARNINGS=default::DeprecationWarning
  OS_LOG_CAPTURE={env:OS_LOG_CAPTURE:true}
  OS_STDOUT_CAPTURE={env:OS_STDOUT_CAPTURE:true}
  OS_STDERR_CAPTURE={env:OS_STDERR_CAPTURE:true}
deps =
  -c{env:UPPER_CONSTRAINTS_FILE:https://releases.openstack.org/constraints/upper/stein}
  -r{toxinidir}/requirements.txt
  -r{toxinidir}/test-requirements.txt
commands =
  stestr run {posargs}

[testenv:pep8]
basepython = python3
commands =
  flake8
  {toxinidir}/tools/check_samples.sh
  {[testenv:bandit]commands}

[testenv:releasenotes]
basepython = python3
deps =
  -c{env:UPPER_CONSTRAINTS_FILE:https://releases.openstack.org/constraints/upper/stein}
  -r{toxinidir}/requirements.txt
  -r{toxinidir}/doc/requirements.txt
commands = sphinx-build -a -E -W -d releasenotes/build/doctrees -b html releasenotes/source releasenotes/build/html

[testenv:venv]
basepython = python3
commands = {posargs}

[testenv:cover]
basepython = python3
setenv =
  {[testenv]setenv}
  PYTHON=coverage run --source neutron_lib --parallel-mode
commands =
  stestr run --no-subunit-trace {posargs}
  coverage combine
  coverage html -d cover
  coverage xml -o cover/coverage.xml

[testenv:docs]
basepython = python3
deps =
  -c{env:UPPER_CONSTRAINTS_FILE:https://releases.openstack.org/constraints/upper/stein}
  -r{toxinidir}/requirements.txt
  -r{toxinidir}/doc/requirements.txt
commands = sphinx-build -W -b html doc/source doc/build/html

[testenv:api-ref]
basepython = python3
whitelist_externals = rm
deps =
  -c{env:UPPER_CONSTRAINTS_FILE:https://releases.openstack.org/constraints/upper/stein}
  -r{toxinidir}/requirements.txt
  -r{toxinidir}/doc/requirements.txt
commands =
  rm -rf api-ref/build
  sphinx-build -W -b html -d api-ref/build/doctrees api-ref/source api-ref/build/html

[testenv:linkcheck]
basepython = python3
deps =
  -c{env:UPPER_CONSTRAINTS_FILE:https://releases.openstack.org/constraints/upper/stein}
  -r{toxinidir}/requirements.txt
  -r{toxinidir}/doc/requirements.txt
whitelist_externals = rm
commands =
  rm -rf api-ref/build
  sphinx-build -W -b linkcheck api-ref/source api-ref/build/linkcheck
  rm -rf doc/build
  sphinx-build -W -b linkcheck doc/source doc/build/linkcheck

[testenv:debug]
basepython = python3
commands = oslo_debug_helper -t neutron_lib/tests/unit {posargs}

[testenv:api-report]
basepython = python3
commands =
   {toxinidir}/tools/api_report.sh

[flake8]
# H904: Delay string interpolations at logging calls
enable-extensions=H904
show-source = True
exclude=.venv,.git,.tox,dist,doc,*lib/python*,*egg,build,tools
import-order-style = pep8

[testenv:bandit]
# B104: Possible binding to all interfaces
# B303: Blacklist use of insecure MD2, MD4, MD5, or SHA1 hash functions
# B311: Standard pseudo-random generators are not suitable for security/cryptographic purpose
deps = -r{toxinidir}/test-requirements.txt
commands = bandit -r neutron_lib -x tests -n5 -s B104,B303,B311

[hacking]
import_exceptions = neutron_lib._i18n
local-check-factory = neutron_lib.hacking.checks._neutron_lib_factory
